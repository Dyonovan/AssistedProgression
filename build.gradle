buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.

repositories {
    maven { // Waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven {
        name 'BR Repo'
        url "http://www.dyonovan.com/maven2/"
    }
    maven {
      // location of the maven that hosts JEI files
      name = "Progwml6 maven"
      url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
      // location of a maven mirror for JEI files, as a fallback
      name = "ModMaven"
      url = "modmaven.k-4u.nl"
    }
	maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
	maven {
        url 'http://maven.epoxide.xyz'
    }
}

apply plugin: 'scala'
apply plugin: 'maven'

ext.configFile = file "gradle.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}

String build = ""
if (project.hasProperty("teamcity")) {
    build = "B" +"${project.ext['build.number']}"
}
if (build == null || build == '') {
    version = "${project.minecraft_version}-${project.mod_version}"
} else {
    version = "${project.minecraft_version}-${project.mod_version}-" + build
}

group= "com.teambrmodding.assistedprogression"
archivesBaseName = "AssistedProgression"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    runDir = "run"

	mappings = "${config.MAPPINGS}"
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    deployerJars "org.apache.maven.wagon:wagon-ftp:2.2"
    // compile against the JEI API but do not include it at runtime
  deobfProvided "mezz.jei:jei_${config.minecraft_version}:${config.JEI_version}:api"
  // at runtime, use the full JEI jar
  runtime "mezz.jei:jei_${config.minecraft_version}:${config.JEI_version}"

    compile group: "com.teambr.bookshelf", name: "Bookshelf-API", version: "1.12.2-" + "${config.bookshelf_version}" +"-B+", classifier: "dev", changing: true
	compile "mcp.mobius.waila:Waila:${config.WAILA_version}:dev"
}

processResources
{

	exclude '**/Thumbs.db'

    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

configurations {
    deployerJars
}

task devJar(type: Jar, dependsOn: 'classes') {
    from(sourceSets.main.output) {
        include '**'
    }
    extension = 'jar'
    classifier = 'dev'
}

task javadocJar(type: Zip, dependsOn: javadoc) {
    from 'build/docs/javadoc'
    classifier = 'javadoc'
}

artifacts {
    archives devJar
    //archives javadocJar
}


uploadArchives {
    if (project.hasProperty('username') && project.hasProperty('password')) {
        repositories {
            mavenDeployer {
                configuration = configurations.deployerJars
                //repository(url: System.properties['URL']) {
                repository(url: "ftp://dyonovan.com/srv/http/maven2") {
                    authentication(userName: "${username}", password: "${password}")
                }

                pom {
                    groupId = project.group
                    version = project.version
                    artifactId = project.archivesBaseName

                    pom.project {
                        name project.archivesBaseName
                        packaging 'jar'
                        description 'Bookshelf'
                        url 'https://github.com/TeamBR-Modding/AssistedProgression'
                        scm {
                            url 'https://github.com/TeamBR-Modding/AssistedProgression'
                            connection 'scm:git:git@github.com/TeamBR-Modding/AssistedProgression.git'
                            developerConnection 'scm:git:git@github.com/TeamBR-Modding/AssistedProgression.git'
                        }
                        issueManagement {
                            system 'github'
                            url 'https://github.com/TeamBR-Modding/AssistedProgression/issues'
                        }
                        licenses {
                            license {
                                name 'Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License'
                                url 'http://creativecommons.org/licenses/by-nc-sa/4.0/'
                                distribution 'repo'
                            }
                        }
                        developers {
                            developer {
                                id 'Dyonovan'
                                name 'Dyonovan'
                                roles {
                                    role 'developer'
                                }
                            }
                            developer {
                                id 'pauljoda'
                                name 'pauljoda'
                                roles {
                                    role 'developer'
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}